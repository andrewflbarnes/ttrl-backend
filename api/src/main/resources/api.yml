openapi: 3.0.1
servers:
- url: "https://www.andrewflbarnes.com/api/ttrl"
info:
  title: API for Ticket to Ride League
  description: API for Ticket to Ride League
  version: 1.0.0
  contact:
    email: info@andrewflbarnes.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
tags:
- name: default
  description: Calls open for anyone
paths:
  /users:
    get:
      operationId: getUsers
      responses:
        200:
          description: Users found and details returned
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserList"
    post:
      operationId: addUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserUpdate"
      responses:
        201:
          description: User successfully created
          headers:
            location:
              description: Location of the created resource
              schema:
                type: string
        409:
          description: User already exists
  /users/{discordId}:
    parameters:
    - in: path
      name: discordId
      schema:
        type: string
      required: true
      description: Discord ID of the user to update/get
    get:
      operationId: getUser
      responses:
        200:
          description: User found and details returned
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserItem"
    put:
      operationId: updateUserFull
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserUpdate"
      responses:
        204:
          description: User successfully updated
        400:
          $ref: "#/components/responses/BadRequest"
    patch:
      operationId: updateUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserOperation"
      responses:
        204:
          description: User successfully updated
        400:
          $ref: "#/components/responses/BadRequest"
components:
  responses:
    BadRequest:
      description: request submitted was invalid
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
  schemas:
    ErrorResponse:
      type: object
      required:
      - reason
      properties:
        reason:
          type: string
          example: "Invalid discrod ID: sajkfghe80he3r0hi2e"
    UserOperation:
      type: object
      required:
      - secret
      - operation
      properties:
        secret:
          type: string
          example: "0123456789ABCDEF0123456789ABCDEF"
        operation:
          type: string
          enum: [win, lose, high, picture]
          example: high
        opval:
          type: string
          example: "116"
    UserUpdate:
      allOf:
      - $ref: "#/components/schemas/UserItem"
      - type: object
        required:
        - secret
        properties:
          secret:
            type: string
            example: "0123456789ABCDEF0123456789ABCDEF"
    UserItem:
      type: object
      required:
      - name
      - discordId
      properties:
        discordId:
          type: string
          example: Barnesly#1234
        name:
          type: string
          example: Barnesly
        wins:
          type: integer
          example: 5
        losses:
          type: integer
          example: 3
        high:
          type: integer
          example: 116
        picture:
          type: string
          example: "https://nerdist.com/wp-content/uploads/2020/07/maxresdefault.jpg"
    UserList:
      type: array
      items:
        $ref: "#/components/schemas/UserItem"
